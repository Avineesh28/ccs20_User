<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <link href="https://fonts.googleapis.com/css?family=Poppins:400,600,700" rel="stylesheet" />
  <link rel="preconnect" href="https://fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.css" />
  <!-- <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script> -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
  <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
  <!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" /> -->
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.1/css/all.css" integrity="sha384-vp86vTRFVJgpjF9jiIGPEEqYqlDwgyBgEF109VFjmqGmIY/Y4HV4d3Gp2irVfcrp" crossorigin="anonymous">
  <link rel="stylesheet" href="/stylesheets/quiz.css" />
  <title>IEEECS | QUIZ</title>
  <!-- <style>
    [type="radio"]:checked+span:after,
    [type="radio"].with-gap:checked+span:after {
      background-color: #faa41a;
    }

    [type="radio"]:checked+span:after,
    [type="radio"].with-gap:checked+span:before,
    [type="radio"].with-gap:checked+span:after {
      border: 2px solid #faa41a;
    }
  </style> -->
  <!-- <style>
    .swal-button {
      background-color: #faa41a !important;
    }
  </style> -->
</head>

<body>
  <div id="cover"></div>
  <script>
    $(window).on("load", function () {
      $("#cover").fadeOut(200);
    });
  </script>
  <div class="navbar-fixed">
    <nav class="nav-extended" style="height: 72px;" >
      <div class="nav-wrapper">
        <a href="#" class="brand-logo left"><img src="/images/IEEE-CS_New.png" alt="logo" class="custom-logo" /></a>
        <span class="right-nav-item"><em class="fas fa-user user-icon"></em><span class="username"><%= user %></span></span>
      </div>      
    </nav>
  </div>
  <div class="main-content">
      <div class="first-content-container">
          <div class="domain-option row reset">
            <div class="technical domain-name col border-left border-1">1. Technical</div>
            <div class="management domain-name col border-1">2. Management</div>
            <div class="design domain-name col border-1">3. Design</div>
            <div class="documentation domain-name col border-right border-1 border-2">4. Documentation</div>
          </div>
          <div class="clock">
              <span class="timer"><em class="far fa-clock"></em><span class="time">HH:MM:SS</span></span>
          </div>
          
      </div>
      <div class="mobile-domain-option">
        <span id="mobile-domain-text">Section 1 of 4: Technical</span>
      </div>
      <div class="second-content-container">
          <div class="question-area">
              <!-- <div class="actual-question hidden">
                  <div class="question-txt">Q1. What is the full form of IEEE?</div>
                  <div class="option-container">
                    <label for="answer">Answer: </label>
                    <input class="input-field-style" type="text" name="answer" placeholder="In a Sentence or Two">
                  </div>
              </div>
              <div class="actual-question hidden">
                <div class="question-txt">Q1. What is the full form of IEEE?</div>
                  <div class="option-container">
                    <textarea name="longAnswer" class="long-input-field-style" cols="60" rows="30" placeholder="Answer in Brief" ></textarea>
                  </div>
              </div>
              <div class="actual-question">
                <div class="question-txt">Q1. What is the full form of IEEE?</div>
                  <div class="option-container">
                    <label class="option">
                        <input name="group1" type="radio" />
                        <span class="option-txt">Wrong Answer</span>
                    </label><br>
                    <label class="option">
                        <input name="group1" type="radio" />
                        <span class="option-txt">Wrong Answer</span>
                    </label><br>
                    <label class="option">
                        <input name="group1" type="radio" />
                        <span class="option-txt">Correct Answer</span>
                    </label><br>
                    <label class="option">
                        <input name="group1" type="radio" />
                        <span class="option-txt">Wrong Answer</span>
                    </label><br>
                  </div>
              </div>
              <div class="actual-question">
                <div class="question-txt">Q1. What is the full form of IEEE?</div>
                  <div class="option-container">
                    <label class="option">
                      <input name="group1" type="checkbox" class="filled-in checkbox-style" />
                      <span class="option-txt">Wrong Answer</span>
                  </label><br>
                  <label class="option">
                      <input name="group1" type="checkbox" class="filled-in checkbox-style" />
                      <span class="option-txt">Wrong Answer</span>
                  </label><br>
                  <label class="option">
                      <input name="group1" type="checkbox" class="filled-in checkbox-style" />
                      <span class="option-txt">Correct Answer</span>
                  </label><br>
                  <label class="option">
                      <input name="group1" type="checkbox" class="filled-in checkbox-style" />
                      <span class="option-txt">Wrong Answer</span>
                  </label><br>
                  </div>
              </div> -->
          </div>
          <div class="question-navigation">
            <div class="nav-container">
                <ul class="nav-container-ul">
                    <!-- <li class="navigation-txt"><button onclick="loadQues(parseInt(this.innerText)-1);" type="submit" class="btn-nav ongoing">1</button></li>
                    <li class="navigation-txt"><button onclick="loadQues(parseInt(this.innerText)-1);" type="submit" class="btn-nav">2</button></li>
                    <li class="navigation-txt"><button onclick="loadQues(parseInt(this.innerText)-1);" type="submit" class="btn-nav">3</button></li>
                    <li class="navigation-txt"><button onclick="loadQues(parseInt(this.innerText)-1);" type="submit" class="btn-nav">4</button></li>
                    <li class="navigation-txt"><button onclick="loadQues(parseInt(this.innerText)-1);" type="submit" class="btn-nav">5</button></li>
                    <li class="navigation-txt"><button onclick="loadQues(parseInt(this.innerText)-1);" type="submit" class="btn-nav">6</button></li> -->
                </ul>
            </div>
          </div>

      </div>
      <div class="button-content">
          <div class="row button-container">
              <div class="col l4 s6">
                  <button type="submit" class="btn-def btn-quiz" onclick="loadPrev()"><em class="fas fa-chevron-left"></em><span class="quiz-nav-btn">Previous</span></button>
              </div>
              <div class="col l4 s6">
                  <button type="submit" class="btn-def btn-quiz" onclick="loadNext()"><span class="quiz-nav-btn">Next</span><em class="fas fa-chevron-right"></em></button>
                  <!-- <input type="submit" class="btn-quiz btn-submit" value="Submit Test"> -->
                </div>
              <div class="col l4 s12">
                  <button type="submit" class="btn-def btn-submit"><span>Submit Test</span></button>
              </div>
          </div>
      </div>

  </div>
  
  <script type="text/javascript">

  var loadQues, loadNext, loadPrev;
  $(document).ready(function () {
    (function packFunc() {

      // Dummy JSON
      var questionData=[{
        "id": 1,
        "question":"What is the Full Form of IEEE?",
        "qtype":"singlec",
        "options":['Wrong', 'Correct','Wrong','Wrong'],
      },
      {
        "id": 2,
        "question":"What is the Full Form of IEEE?",
        "qtype":"multic",
        "options":['Wrong', 'Correct','Wrong','Wrong'],
      },
      {
        "id": 3,
        "question":"What is the Full Form of IEEE?",
        "qtype":"oneline",
        "options":null,
      },
      {
        "id": 4,
        "question":"What is the Full Form of IEEE?",
        "qtype":"descr",
        "options":null,
      },
    ];
    // this array holds the data corresponding to backend data of 
    // section answered.
    // update this array only when a section's answer is submitted to backend and 
    // success response is what we got
    var userDomainData;
    $(document).ready(function () {
      $.ajax({
        url: "/domaininfo",
        method: "GET",
        success: function (res) {
          if (res.success == true) {
            userDomainData = res.data;
            console.log(userDomainData);
            mainFunc();
          }
        },
        error: function (msg) {
          console.log(msg);
        },
      });
    });
    // function loadQues(number) {
    //   number = parseInt(number);
    // }
    // function loadNext(){

    // }
    // function loadPrev(){

    // }
    function mainFunc() {
      // false: Not attempted
      // true: attempted
      // null: Not chosen
      var domainSelector=document.getElementsByClassName('domain-name');
      var domainNameArray=['Technical', 'Management', 'Design', 'Documentation'];
      var mobileSectionCount=domainNameArray.length;
      var mobileSectionNumber=1;
      var mobileFirstSection=null;
      var mobileDomainSelector=document.getElementById('mobile-domain-text');
      for(var i=0;i<domainSelector.length;i++){
        if(userDomainData[i]===null) {
          domainSelector[i].classList.add('not-selected');
          mobileSectionCount -= 1;
        } else if(mobileFirstSection===null){
          if (userDomainData[i] === false) {
            domainSelector[i].classList.add('ongoing');
            mobileFirstSection = domainNameArray[i];
          } else {
            domainSelector[i].classList.add('domain-attempted');
            mobileSectionNumber += 1;
          }
        }
        // else if(!domains[i] && !firstSectionFlag){
        //   // Highlights only the first section selected by user
        //   domainSelector[i].classList.add('ongoing');
        //   firstSectionFlag++;
        //   mobileFirstSection=i;
        // }
        // if(domains[i]!==null){
        //   mobileSectionCount++;
        //   // console.log(domains[i]);
        //   // mobileSectionList[i]=i; Tech, Mgmt, Design, Doc (0,1,2,3)
        // }
      }
      if (mobileFirstSection !== null) {
        mobileDomainSelector.textContent=`Section ${mobileSectionNumber} of ${mobileSectionCount}: ${mobileFirstSection}`;
        var domainChoosedName = mobileFirstSection.toLowerCase();
        // we got the name of section to start now and we can proceed further
        // this function contains all the related data about a section
        domainFunc(domainChoosedName);
      } else {
        // All domains Answered
        // do end test
      } 
    }
    function domainFunc(domain) {
      // first fetch all questions from backend
      $.ajax({
        url: `/question/${domain}`,
        method: "GET",
        success: function (res) {
          if (res.success == true) {
            console.log(res.data);
            prepareAll(res.data);
          } else {
            // We can display this error as a 
            // sweet alert and tell to refresh page
            console.log(res.message);
          }
        },
        error: function (msg) {
          console.log(msg);
        },
      });
      function prepareAll(questions) {
        let qDivision = document.getElementsByClassName("question-area")[0];
        let qNavig = document.getElementsByClassName("nav-container-ul")[0];
        let qArray = [];
        let navArray = [];
        var len = 0;
        var changeTo;
        var prevTo;
        var nextTo;
        questions.forEach(question => {
          let qData = createQuestion(question, ++len);
          qDivision.appendChild(qData);
          qArray.push(qData);
          let navData = createNavigation(len);
          qNavig.appendChild(navData);
          navArray.push(navData.children[0]);
        });
        var current = 0;
        --len;
        console.log(len);
        changeTo = function changeTo(no) {
          if (no <= len && no >= 0) {
            qArray[current].classList.add("hidden");
            navArray[current].classList.remove("ongoing");
            current = no;
            qArray[current].classList.remove("hidden");
            navArray[current].classList.add("ongoing");
          }
        }
        nextTo = function nextTo() {
          changeTo(current+1);
        }
        prevTo = function prevTo() {
          changeTo(current-1);
        }
        loadNext = nextTo;
        loadPrev = prevTo;
        loadQues = changeTo;
        changeTo(current);
      }
      // Sample Question Structure
      // res.data is array of following type
      /*
      {
          _id: // contains questionId which is mongoose id of question
               // the candidate for name field of each question
          ,
          options: [String] // may be empty for descr and oneline type
          ,
          qType: String Enum { multic, descr, oneline, singlec } // one of 4 types
          ,
          question: String // string containing actual question 
      }
      */
    }
    function createNavigation(no, func) {
      let liE = document.createElement("li");
      liE.classList.add("navigation-txt");
      let buttonE = document.createElement("button");
      buttonE.type = "submit";
      buttonE.classList.add("btn-nav");
      buttonE.innerText = no;
      buttonE.onclick=new Function(`{loadQues(parseInt(${no-1}))}`);
      liE.appendChild(buttonE);
      return liE;
    }
    function createQuestion (questionObj, no) {
      let questionContainer = document.createElement("div");
      questionContainer.classList.add("hidden");
      questionContainer.classList.add("actual-question");
      let qDiv = document.createElement("div");
      qDiv.classList.add("question-txt");
      qDiv.innerText = `Q${no}. ${questionObj.question}`;
      let ansDiv;
      if (questionObj.qType === "multic") {
        ansDiv = multiChoiceAns(questionObj._id, questionObj.options);
      } else if (questionObj.qType === "singlec") {
        ansDiv = singleChoiceAns(questionObj._id, questionObj.options);
      } else if(questionObj.qType === "descr") {
        ansDiv = descAns(questionObj._id);
      } else {
        ansDiv = singleLineAns(questionObj._id);
      }
      questionContainer.appendChild(qDiv);
      questionContainer.appendChild(ansDiv);
      return questionContainer;
    }
    function multiChoiceAns(qid, options){
      let containerDiv = document.createElement("div");
      containerDiv.classList.add("option-container");
      var i;
      for(i = 0; i < options.length; i++) {
        let label = document.createElement("label");
        label.classList.add("option");
        let br = document.createElement("br");
        let inputElement = document.createElement("input");
        inputElement.type = "checkbox";
        inputElement.name = qid; // name
        inputElement.value = options[i] // option-text
        inputElement.classList.add("filled-in"); 
        inputElement.classList.add("checkbox-style");
        let span = document.createElement("span");
        span.classList.add("option-txt");
        span.innerText = options[i]; // option text
        label.appendChild(inputElement);
        label.appendChild(span);
        containerDiv.appendChild(label);
        containerDiv.appendChild(br);
      }
      return containerDiv;
    }
    function singleChoiceAns(qid, options){
      let containerDiv = document.createElement("div");
      containerDiv.classList.add("option-container");
      var i;
      for(i = 0; i < options.length; i++) {
        let label = document.createElement("label");
        label.classList.add("option");
        let br = document.createElement("br");
        let inputElement = document.createElement("input");
        inputElement.type = "radio";
        inputElement.name = qid; // name
        inputElement.value = options[i] // option-text
        let span = document.createElement("span");
        span.classList.add("option-txt");
        span.innerText = options[i]; // option text
        label.appendChild(inputElement);
        label.appendChild(span);
        containerDiv.appendChild(label);
        containerDiv.appendChild(br);
      }
      return containerDiv;
    }
    function descAns(qid){
      let containerDiv = document.createElement("div");
      containerDiv.classList.add("option-container");
      let textarea = document.createElement("textarea");
      textarea.classList.add("long-input-field-style");
      textarea.placeholder = "Answer in Brief";
      textarea.cols = 60;
      textarea.rows = 30;
      textarea.name = qid; // name
      containerDiv.appendChild(textarea);
      return containerDiv;
    }
    function singleLineAns(qid){
      let containerDiv = document.createElement("div");
      containerDiv.classList.add("option-container");
      let label = document.createElement("label");
      label.htmlFor = qid; // name
      label.innerText = "Answer:";
      let inputElement = document.createElement("input");
      inputElement.classList.add("input-field-style");
      inputElement.type = "text";
      inputElement.placeholder = "In a Sentence or Two";
      inputElement.name = qid; // name
      containerDiv.appendChild(label);
      containerDiv.appendChild(inputElement);
      return containerDiv;
    }
      // Pre section timer using Sweetalert2 
      Swal.fire({
      title: 'Get Ready!',
      icon: 'warning',
      html:
        'Your Test Will Begin in ' +
        "<span id='sw-timer-count'>5</span>",
      allowOutsideClick: false,
      timer: 7000,
      showCloseButton: false,
      showCancelButton: false,
      showConfirmButton: false,
      focusConfirm: false,

    });
    // SW Timer DOM
    var swTimer=document.getElementById('sw-timer-count');
    var i=5;
    setInterval(function(){
      if(i<=0)
      {
        swTimer.innerHTML=0;
      }
      else
      {
        swTimer.innerHTML=i;
        i--; 
      }
    }, 1000);

  })()
  });
  </script>
</body>

</html>
